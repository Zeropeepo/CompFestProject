# in Dockerfile.frontend

# --- Stage 1: Build the React App ---
# Uses your specified Node version and the 'builder' alias
FROM node:20-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json from your 'frontend' directory
# This is your corrected path, which is correct for your project structure.
COPY frontend/package.json frontend/package-lock.json ./

# Install all dependencies
RUN npm install

# Copy the rest of your frontend source code into the container
# This is also your corrected path.
COPY frontend/ ./

# Build the production-ready static files. The output will be in /app/dist
RUN npm run build

# --- Stage 2: Serve the App with a lean Nginx server ---
# This stage creates the final, small image for production
FROM nginx:1.27-alpine

# The Nginx image needs a configuration file to handle SPA routing (the 404 error).
# First, remove the default Nginx config.
RUN rm /etc/nginx/conf.d/default.conf

# Next, copy the custom nginx.conf from your project root into the image.
# We will create this nginx.conf file in the next step.
COPY /nginx/nginx.conf /etc/nginx/conf.d/default.conf


# Copy only the built output from the 'builder' stage into the Nginx server directory.
COPY --from=builder /app/dist /usr/share/nginx/html

# Expose port 80 for the Nginx server
EXPOSE 80

# The default command for the Nginx image will start the server automatically
CMD ["nginx", "-g", "daemon off;"]