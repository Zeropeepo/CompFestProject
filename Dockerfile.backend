# --- Stage 1: Build the Go application ---
FROM golang:1.24-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy go.mod and go.sum files to download dependencies
COPY backend/go.mod backend/go.sum ./
RUN go mod download

# Copy the rest of the backend source code
COPY backend/ ./

# Build the application. The single dot tells it to build the main package in the current directory.
# UPDATED: Changed ./... to .
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/server .

# --- Stage 2: Create the final, small production image ---
FROM alpine:latest

# Set the working directory
WORKDIR /app

# Copy only the compiled binary from the 'builder' stage
COPY --from=builder /app/server .

# Copy the .env file for environment variables
COPY backend/.env .

# Expose the port the Go application runs on
EXPOSE 8080

# Command to run the application when the container starts
CMD ["/app/server"]